"""Changed ID to ULID & add has_password column to User model

Revision ID: e2f25c4a2af4
Revises: 48825f794639
Create Date: 2024-12-31 20:07:19.656401

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e2f25c4a2af4'
down_revision = '48825f794639'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('leaderboard', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.alter_column('quiz_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_leaderboard_quiz_id'), ['quiz_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_leaderboard_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_notification_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('question', schema=None) as batch_op:
        batch_op.alter_column('quiz_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)

    with op.batch_alter_table('quiz', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('quiz_id_seq'::regclass)"))
        batch_op.alter_column('created_by',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_quiz_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_quiz_created_by'), ['created_by'], unique=False)

    with op.batch_alter_table('quiz_history', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.alter_column('quiz_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_quiz_history_quiz_id'), ['quiz_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_quiz_history_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('has_password', sa.Boolean(), nullable=False, server_default=sa.sql.false()))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_constraint('user_username_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.execute("""
        UPDATE "user"
        SET has_password = TRUE
        WHERE password_hash IS NOT NULL;
    """)
    op.execute("""
        UPDATE "user"
        SET has_password = FALSE
        WHERE password_hash IS NULL;
    """)

    with op.batch_alter_table('user_answer', schema=None) as batch_op:
        batch_op.alter_column('quiz_history_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_user_answer_question_id'), ['question_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_answer_quiz_history_id'), ['quiz_history_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_answer', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_answer_quiz_history_id'))
        batch_op.drop_index(batch_op.f('ix_user_answer_question_id'))
        batch_op.alter_column('quiz_history_id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.create_unique_constraint('user_username_key', ['username'])
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))
        batch_op.drop_column('has_password')

    with op.batch_alter_table('quiz_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quiz_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_quiz_history_quiz_id'))
        batch_op.alter_column('quiz_id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('quiz', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quiz_created_by'))
        batch_op.drop_index(batch_op.f('ix_quiz_category_id'))
        batch_op.alter_column('created_by',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('quiz_id_seq'::regclass)"))

    with op.batch_alter_table('question', schema=None) as batch_op:
        batch_op.alter_column('quiz_id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_user_id'))
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('leaderboard', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_leaderboard_user_id'))
        batch_op.drop_index(batch_op.f('ix_leaderboard_quiz_id'))
        batch_op.alter_column('quiz_id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=16),
               type_=sa.INTEGER(),
               existing_nullable=False)

    # ### end Alembic commands ###
