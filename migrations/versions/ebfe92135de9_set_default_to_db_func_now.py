"""set: default to db.func.now()


Revision ID: ebfe92135de9
Revises: 911dce501e56
Create Date: 2025-01-09 08:57:13.297812

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ebfe92135de9'
down_revision = '911dce501e56'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.alter_column('date_sent',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('quiz', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('quiz_history', schema=None) as batch_op:
        batch_op.alter_column('date_taken',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('used_token', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('used_token', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('quiz_history', schema=None) as batch_op:
        batch_op.alter_column('date_taken',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('quiz', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.alter_column('date_sent',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    # ### end Alembic commands ###
